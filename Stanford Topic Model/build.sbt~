
name := "tmt"

version := "0.4.0"

organization := "edu.stanford.nlp"

scalaVersion := "2.9.1"

resolvers ++= Seq(
  "ScalaNLP Maven2" at "http://repo.scalanlp.org/repo",
  "Scala Tools Snapshots" at "http://scala-tools.org/repo-snapshots/"
)

libraryDependencies ++= Seq(
  "org.scala-lang" % "scala-swing" % "2.9.1",
  "org.scalala" %% "scalala" % "1.0.0.RC2",
  "org.scalanlp" %% "scalanlp-data" % "0.4.RC1"
)

libraryDependencies <<= (scalaVersion, libraryDependencies) { (sv, deps) =>
  sv match {
    case "2.9.1" =>
      (deps :+ ("org.scalatest" % "scalatest" % "1.4.RC2" % "test")
            :+ ("org.scala-tools.testing" %% "scalacheck" % "1.9" % "test"))
    case x if x.startsWith("2.8") =>
      (deps :+ ("org.scalatest" % "scalatest" % "1.3" % "test")
            :+ ("org.scala-tools.testing" % "scalacheck_2.8.1" % "1.8" % "test"))
    case x  => error("Unsupported Scala version " + x)
  }
}

//publishTo <<= (version) { version: String =>
//  val nexus = "http://nexus.scala-tools.org/content/repositories/"
//  if (version.trim.endsWith("SNAPSHOT")) Some("snapshots" at nexus + "snapshots/") 
//  else                                   Some("releases"  at nexus + "releases/")
//}
//
//credentials += Credentials(Path.userHome / ".ivy2" / ".credentials")

javacOptions ++= Seq("-source", "1.5", "-target", "1.5")

scalacOptions ++= Seq("-no-specialization","-deprecation","-target:jvm-1.5")

mainClass in (Compile,packageBin) := Some("edu.stanford.nlp.tmt.TMTMain")

javaOptions += "-Xmx2g"

seq(com.github.retronym.SbtOneJar.oneJarSettings: _*)

